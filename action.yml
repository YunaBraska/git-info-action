name: 'Git Info Action'
description: 'Git insights such as latest branch & commit & tag information, ticket number detection, breaking changes...'
inputs:
  work-dir:
    description: 'work dir'
    required: false
    default: '.'
  ignore-files:
    description: 'regex list to ignore files (comma separated) e.g. "/\.txt$/, /\.doc$/"'
    required: false
    default: 'null'
  branch-fallback:
    description: 'fallback if no branch_default could be found'
    required: false
    default: 'main'
  tag-fallback:
    description: 'fallback if no tag could be found'
    required: false
    default: 'null'
  fallback-commit-type:
    description: 'fallback for commits without type (Conventional Commits)'
    required: false
    default: ''
  fallback-commit-scope:
    description: 'fallback for commits without scope (Conventional Commits)'
    required: false
    default: ''
  commit-msg-with-footer:
    description: 'include footer from commit messages (Conventional Commits)'
    required: false
    default: 'true'
  null-to-empty:
    description: 'converts null to empty string'
    required: false
    default: 'true'
outputs:
  branch:
    description: 'current branch'
  branch_default:
    description: 'default branch'
  commits_ahead:
    description: 'branch commits that are not in the branch_default'
  commits_behind:
    description: 'branch_default commits that are not in the branch'
  is_default_branch:
    description: 'true if branch == branch_default'
  has_changes:
    description: 'true if sha_latest != sha_latest_tag'
  has_local_changes:
    description: 'true if there are changes on non committed files'
  has_breaking_changes:
    description: 'true if a commit has a breaking change (Conventional Commits)'
  sha_latest:
    description: 'sha from latest commit'
  sha_latest_tag:
    description: 'sha from latest tag'
  tag_latest:
    description: 'latest tag'
  ticket_numbers:
    description: 'list of ticket numbers (Jira  GitHub)'
  commit_types:
    description: 'list of commit types (Conventional Commits)'
  commit_scopes:
    description: 'list of commit scopes (Conventional Commits)'
  change_log:
    description: 'Full changelog'
  change_log_type_chore:
    description: 'Change Log for the type chore (Conventional Commits)'
  change_log_type_feat:
    description: 'Change Log for the type feat (Conventional Commits)'
  change_log_type_fix:
    description: 'Change Log for the type fix (Conventional Commits)'
  change_log_type_ci:
    description: 'Change Log for the type ci (Conventional Commits)'
  change_log_type_docs:
    description: 'Change Log for the type docs (Conventional Commits)'
  change_log_type_style:
    description: 'Change Log for the type style (Conventional Commits)'
  change_log_type_refactor:
    description: 'Change Log for the type refactor (Conventional Commits)'
  change_log_type_perf:
    description: 'Change Log for the type perf (Conventional Commits)'
  change_log_type_test:
    description: 'Change Log for the type test (Conventional Commits)'
  change_log_type_revert:
    description: 'Change Log for the type revert (Conventional Commits)'
  change_type:
    description: 'Change Type [major, minor, patch, rc] (Conventional Commits)'
  x_language_list:
    description: 'a list of supported language for x_has_changes_<lang>'
  event_name:
    description: "The name of the event that triggered the workflow."
  event_source:
    description: "The source of the event that triggered the workflow."
  var_with_default:
    description: "The value of a variable with a default value."
  var_should_be_set:
    description: "The value of a variable that should be set by the user."
  repo_id:
    description: "The ID of the repository."
  repo_size:
    description: "The size of the repository."
  repo_open_issues:
    description: "The number of open issues in the repository."
  repo_star_count:
    description: "The number of stars the repository has."
  is_repo_fork:
    description: "Whether the repository is a fork."
  is_repo_private:
    description: "Whether the repository is private."
  is_repo_archived:
    description: "Whether the repository is archived."
  is_repo_disabled:
    description: "Whether the repository is disabled."
  is_repo_template:
    description: "Whether the repository is a template."
  repo_visibility:
    description: "The visibility of the repository."
  repo_default_branch:
    description: "The default branch of the repository."
  repo_language:
    description: "The language of the repository."
  repo_name:
    description: "The name of the repository."
  repo_created_at:
    description: "The creation date of the repository."
  repo_updated_at:
    description: "The last update date of the repository."
  repo_html_url:
    description: "The URL of the repository's HTML page."
  repo_hooks_url:
    description: "The URL of the repository's hooks."
  repo_description:
    description: "The description of the repository."
  repo_license_key:
    description: "The key of the repository's license."
  repo_license_name:
    description: "The name of the repository's license."
  repo_owner_id:
    description: "The ID of the repository's owner."
  repo_owner_name:
    description: "The name of the repository's owner."
  repo_owner_type:
    description: "The type of the repository's owner."
runs:
  using: 'node16'
  main: 'lib/index.js'
branding:
  icon: file-text
  color: purple
