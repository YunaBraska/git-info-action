name: "TEST"

on:
  push:
    # Already covered by "publish.yml" workflow
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!master'
      - '!main'
      - '!default'
    tags-ignore:
      - '**'
  workflow_dispatch:
    ref:
      type: string
      description: "[ref] e.g. branch, tag or commit to checkout [default: github.ref_name || github.head_ref ]"
      required: false

jobs:
  node_test:
    name: "Node Test"
    uses: YunaBraska/YunaBraska/.github/workflows/wc_node_test.yml@main
    with:
      ref: ${{ inputs.ref || github.ref_name || github.head_ref }}
  show_case:
    needs: node_test
    name: "Show Case"
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: "Checkout"
        uses: actions/checkout@main
        with:
          fetch-depth: 100
      - name: "Read Git Info"
        id: "git_info"
        uses: YunaBraska/git-info-action@main
      - name: "Print Git Info"
        run: |
          echo "is_git_repo          [${{ steps.git_info.outputs.is_git_repo }}]"
          echo "tag_latest           [${{ steps.git_info.outputs.tag_latest }}]"
          echo "sha_latest           [${{ steps.git_info.outputs.sha_latest }}]"
          echo "sha_latest_tag       [${{ steps.git_info.outputs.sha_latest_tag }}]"
          echo "branch               [${{ steps.git_info.outputs.branch }}]"
          echo "branch_default       [${{ steps.git_info.outputs.branch_default }}]"
          echo "has_changes          [${{ steps.git_info.outputs.has_changes }}]"
          echo "has_local_changes    [${{ steps.git_info.outputs.has_local_changes }}]"
          echo "has_breaking_changes [${{ steps.git_info.outputs.has_breaking_changes }}]"
          echo "commit_types         [${{ steps.git_info.outputs.commit_types }}]"
          echo "commit_scopes        [${{ steps.git_info.outputs.commit_scopes }}]"
          echo "ticket_numbers       [${{ steps.git_info.outputs.ticket_numbers }}]"
          echo "x_has_changes_python [${{ steps.git_info.outputs.x_has_changes_python }}]"
          echo "change_log           [${{ steps.git_info.outputs.change_log }}]"
          echo "change_log_type_feat [${{ steps.git_info.outputs.change_log_type_feat }}]"
